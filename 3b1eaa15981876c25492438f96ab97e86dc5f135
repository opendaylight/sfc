{
  "comments": [
    {
      "key": {
        "uuid": "9a3d3df0_bc783cf3",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/SfcRspProcessorNsh.java",
        "patchSetId": 7
      },
      "lineNbr": 282,
      "author": {
        "id": 773
      },
      "writtenOn": "2016-02-09T14:14:36Z",
      "side": 1,
      "message": "why is this removed?",
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_1f0e7a34",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/SfcRspProcessorNsh.java",
        "patchSetId": 7
      },
      "lineNbr": 282,
      "author": {
        "id": 3910
      },
      "writtenOn": "2016-02-09T15:02:24Z",
      "side": 1,
      "message": "this line should be removed\nmethod configureNshNscTransportEgressFlow was deleted because appropriate egress flow is now created in configureVxlanGpeAppCoexistTransportEgressFlow method",
      "parentUuid": "9a3d3df0_bc783cf3",
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_5c50105e",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 773
      },
      "writtenOn": "2016-02-09T14:14:36Z",
      "side": 1,
      "message": "for reference, why are these numbers bumped? Do they collide with another range needed by another app?",
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_ffd11658",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 83,
      "author": {
        "id": 3910
      },
      "writtenOn": "2016-02-09T15:02:24Z",
      "side": 1,
      "message": "important value is FLOW_PRIORITY_TRANSPORT_INGRESS which has to be higher than \"allow from port\" flow in GBP project (priority\u003d300) because transport ingress flow is also in table\u003d0 when coexistence.\nOther numbers are increased only because I wanted to preserve original differences between them.",
      "parentUuid": "9a3d3df0_5c50105e",
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_3c6f0cff",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 1089,
      "author": {
        "id": 2039
      },
      "writtenOn": "2016-02-09T14:39:47Z",
      "side": 1,
      "message": "I dont understand this comment. It might be easier to explain it via email than Gerrit.",
      "range": {
        "startLine": 1089,
        "startChar": 25,
        "endLine": 1089,
        "endChar": 96
      },
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_bc82fc91",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 1119,
      "author": {
        "id": 2039
      },
      "writtenOn": "2016-02-09T14:39:47Z",
      "side": 1,
      "message": "This appears to overwrite the value of port passed-in to this method. I would prefer a new variable be used.",
      "range": {
        "startLine": 1119,
        "startChar": 8,
        "endLine": 1119,
        "endChar": 12
      },
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_bff2eecf",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 1119,
      "author": {
        "id": 3910
      },
      "writtenOn": "2016-02-09T15:54:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a3d3df0_bc82fc91",
      "range": {
        "startLine": 1119,
        "startChar": 8,
        "endLine": 1119,
        "endChar": 12
      },
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_9ca61852",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 1128,
      "author": {
        "id": 2039
      },
      "writtenOn": "2016-02-09T14:39:47Z",
      "side": 1,
      "message": "Update this comment explaining what Case 1 and 2 is.",
      "range": {
        "startLine": 1127,
        "startChar": 0,
        "endLine": 1128,
        "endChar": 19
      },
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_5f78022b",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 1128,
      "author": {
        "id": 3910
      },
      "writtenOn": "2016-02-09T15:54:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a3d3df0_9ca61852",
      "range": {
        "startLine": 1127,
        "startChar": 0,
        "endLine": 1128,
        "endChar": 19
      },
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_3f0b7e26",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 1143,
      "author": {
        "id": 2039
      },
      "writtenOn": "2016-02-09T14:39:47Z",
      "side": 1,
      "message": "Does this method now combine what was previously in configureNshNscTransportEgressFlow()?? If so, why combine them?",
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_bf4aeec2",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 1143,
      "author": {
        "id": 3910
      },
      "writtenOn": "2016-02-09T15:54:34Z",
      "side": 1,
      "message": "Actually, yes. They are combined probably because both flows have to be created (At least in our demo).",
      "parentUuid": "9a3d3df0_3f0b7e26",
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_9c7d78b4",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 1157,
      "author": {
        "id": 2039
      },
      "writtenOn": "2016-02-09T14:39:47Z",
      "side": 1,
      "message": "I prefer a new variable be used instead of overwriting what was passed in.",
      "range": {
        "startLine": 1157,
        "startChar": 8,
        "endLine": 1157,
        "endChar": 12
      },
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_5f22c201",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 1157,
      "author": {
        "id": 3910
      },
      "writtenOn": "2016-02-09T15:54:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9a3d3df0_9c7d78b4",
      "range": {
        "startLine": 1157,
        "startChar": 8,
        "endLine": 1157,
        "endChar": 12
      },
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_3cd38cd7",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 1208,
      "author": {
        "id": 773
      },
      "writtenOn": "2016-02-09T14:14:36Z",
      "side": 1,
      "message": "what does this new flow look like?",
      "range": {
        "startLine": 1208,
        "startChar": 19,
        "endLine": 1208,
        "endChar": 22
      },
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_bf6dce9a",
        "filename": "sfcofl2/src/main/java/org/opendaylight/sfc/l2renderer/openflow/SfcL2FlowProgrammerOFimpl.java",
        "patchSetId": 7
      },
      "lineNbr": 1208,
      "author": {
        "id": 3910
      },
      "writtenOn": "2016-02-09T15:02:24Z",
      "side": 1,
      "message": "when app coexistence is set (last SFF + egress classifier on the same node), this flow returns traffic from the last SFF back to the table\u003d0 where it matches gbp flow (due to the nshc\u003d0) and continues in gbp pipeline.\n\npriority\u003d1500,matches,actions\u003d(some actions), set_nshc1\u003d0, resubmit(port,0)",
      "parentUuid": "9a3d3df0_3cd38cd7",
      "range": {
        "startLine": 1208,
        "startChar": 19,
        "endLine": 1208,
        "endChar": 22
      },
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a3d3df0_3f225ea4",
        "filename": "sfcofl2/src/test/java/org/opendaylight/sfc/l2renderer/SfcL2FlowProgrammerTest.java",
        "patchSetId": 7
      },
      "lineNbr": 68,
      "author": {
        "id": 2039
      },
      "writtenOn": "2016-02-09T14:39:47Z",
      "side": 1,
      "message": "Is it necessary to use both mockito and powerMock? If possible, I would prefer to use one or the other, but not both.",
      "range": {
        "startLine": 68,
        "startChar": 33,
        "endLine": 68,
        "endChar": 45
      },
      "revId": "3b1eaa15981876c25492438f96ab97e86dc5f135",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}