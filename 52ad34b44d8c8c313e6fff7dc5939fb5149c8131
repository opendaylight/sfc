{
  "comments": [
    {
      "key": {
        "uuid": "7a6b29fe_71dd6842",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 2039
      },
      "writtenOn": "2016-10-18T07:39:59Z",
      "side": 1,
      "message": "Will there be multiple types of flows created in the same table with this same cookie from different methods? If yes, then it would be easier to debug with a different cookie suffix for each flow. If not, then its ok as is.",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 8
      },
      "revId": "52ad34b44d8c8c313e6fff7dc5939fb5149c8131",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_fc9f8fb2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 9
      },
      "lineNbr": 20,
      "author": {
        "id": 6230
      },
      "writtenOn": "2016-10-18T10:32:27Z",
      "side": 1,
      "message": "Ok, this is only done on a single method at this time so wil leave it as is.",
      "parentUuid": "7a6b29fe_71dd6842",
      "range": {
        "startLine": 18,
        "startChar": 0,
        "endLine": 20,
        "endChar": 8
      },
      "revId": "52ad34b44d8c8c313e6fff7dc5939fb5149c8131",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_b1f8a0c5",
        "filename": "sfc-genius/src/main/java/org/opendaylight/sfc/genius/impl/handlers/writers/SfcGeniusBoundServiceWriter.java",
        "patchSetId": 9
      },
      "lineNbr": 74,
      "author": {
        "id": 2039
      },
      "writtenOn": "2016-10-18T07:39:59Z",
      "side": 1,
      "message": "If we\u0027re going to return effectively an empty CompletableFuture, why return anything at all? Lets just make the method return type void.",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 55
      },
      "revId": "52ad34b44d8c8c313e6fff7dc5939fb5149c8131",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_bc47d74a",
        "filename": "sfc-genius/src/main/java/org/opendaylight/sfc/genius/impl/handlers/writers/SfcGeniusBoundServiceWriter.java",
        "patchSetId": 9
      },
      "lineNbr": 74,
      "author": {
        "id": 6230
      },
      "writtenOn": "2016-10-18T10:32:27Z",
      "side": 1,
      "message": "Returning a CompletableFuture here allows composing the call to this method into another completable future cleanly (SfcGeniusServiceHandler.java:90). While the are other options towards this approach, I thought this as best one given the circumstances. CompletableFuture has a kind of monadic interface that allows some degree of functional programing as long as you stick to it.",
      "parentUuid": "7a6b29fe_b1f8a0c5",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 55
      },
      "revId": "52ad34b44d8c8c313e6fff7dc5939fb5149c8131",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7a6b29fe_9cd01bf9",
        "filename": "sfc-genius/src/main/java/org/opendaylight/sfc/genius/impl/handlers/writers/SfcGeniusBoundServiceWriter.java",
        "patchSetId": 9
      },
      "lineNbr": 74,
      "author": {
        "id": 2039
      },
      "writtenOn": "2016-10-18T12:22:13Z",
      "side": 1,
      "message": "Ok, I understand now.",
      "range": {
        "startLine": 74,
        "startChar": 18,
        "endLine": 74,
        "endChar": 51
      },
      "revId": "52ad34b44d8c8c313e6fff7dc5939fb5149c8131",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}