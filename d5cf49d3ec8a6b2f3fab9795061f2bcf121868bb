{
  "comments": [
    {
      "key": {
        "uuid": "ba1f61a0_fe46ac79",
        "filename": "sfc-sb-rest/pom.xml",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-09-26T17:54:01Z",
      "side": 1,
      "message": "NOT the main point here so more FYI than real review feedback.. needing to do this seems strange to me and possibly an indication of another problem elsewhere - normally this is just automatic - the maven-bundle-plugin (through its internal use of BND, see http://bnd.bndtools.org) is more than smart enough to figure this out by itself... are you sure you really need this? Why?",
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_1c758963",
        "filename": "sfc-sb-rest/pom.xml",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-09-26T20:22:58Z",
      "side": 1,
      "message": "Unfortunately this is needed as that package isn\u0027t referenced in code - it\u0027s only referenced in BP xml. This is b/c we put the BP xml under org/opendaylight/blueprint instead of the default blueprint directory. I had  originally started this convention for reasons outlined in the wiki. I found out later that we lose the automatic scanning by the maven-bundle-plugin to pick up referenced packages.",
      "parentUuid": "ba1f61a0_fe46ac79",
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_6895d431",
        "filename": "sfc-sb-rest/pom.xml",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-09-28T16:56:40Z",
      "side": 1,
      "message": "Oh! Now I got it - thanks for explaining!  Perhaps that\u0027s another reason why an abstraction for this would be useful if more projects were to consume this.. to save this headache. (BTW: Curious that that this even works with the default blueprint directory, I\u0027m surprised that the maven-bundle-plugin is even that smart, in this particular case; it KNOWS about blueprint?! Wow.)",
      "parentUuid": "ba1f61a0_1c758963",
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_8ee931b9",
        "filename": "sfc-sb-rest/pom.xml",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-09-28T17:18:02Z",
      "side": 1,
      "message": "yeah it handles blueprint - but I think blueprint plugs into it somehow. Spring DM did the same thing. But unfortunately it only recognizes the default dir and I haven\u0027t seen anyway to configure it.",
      "parentUuid": "ba1f61a0_6895d431",
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_4d6634ee",
        "filename": "sfc-sb-rest/src/main/resources/org/opendaylight/blueprint/sfc-sb-rest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 5861
      },
      "writtenOn": "2017-09-25T17:45:39Z",
      "side": 1,
      "message": "Tom, is this ExecutorService a \"service\" that can be shared by any project?\n\nMichael, this could be the ExecutorService we were talking about when reviewing this commit [1].\n\n[1] https://git.opendaylight.org/gerrit/#/c/59177/\n\nWe might either use this Service or create a new one in Infrautils.\n\n-1, just to start the discussion.",
      "range": {
        "startLine": 18,
        "startChar": 29,
        "endLine": 18,
        "endChar": 88
      },
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_0df6fcf8",
        "filename": "sfc-sb-rest/src/main/resources/org/opendaylight/blueprint/sfc-sb-rest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-09-25T17:57:57Z",
      "side": 1,
      "message": "This could be moved to infrautils and advertised as a service. It can\u0027t be sharded from here",
      "parentUuid": "ba1f61a0_4d6634ee",
      "range": {
        "startLine": 18,
        "startChar": 29,
        "endLine": 18,
        "endChar": 88
      },
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_6d4e983c",
        "filename": "sfc-sb-rest/src/main/resources/org/opendaylight/blueprint/sfc-sb-rest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 5861
      },
      "writtenOn": "2017-09-25T18:08:50Z",
      "side": 1,
      "message": "Ok. I meant if I might use this SpecialExecutor in Genius\u0027s listeners, for example. Anyway I really like the approach of using it as an OSGi service once moved to infrautils.",
      "parentUuid": "ba1f61a0_0df6fcf8",
      "range": {
        "startLine": 18,
        "startChar": 29,
        "endLine": 18,
        "endChar": 88
      },
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_dc08112a",
        "filename": "sfc-sb-rest/src/main/resources/org/opendaylight/blueprint/sfc-sb-rest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-09-26T17:54:01Z",
      "side": 1,
      "message": "Yes, this looks interesting, if Tom says this is the way to go (entirely trusting you here...  ;) I\u0027m trying to think what really want to move - you can\u0027t advertise a single ExecutorService as an @OsgiService, can you?  Because if I understand what you guys are up to here correctly, then each (subclass of David\u0027s new) AbstractDataTreeChangeListener should have its own newBlockingBoundedCachedThreadPool, based on what you\u0027re doing here?  Or do you want to have a single ODL-wide ExecutorService for all AbstractDataTreeChangeListener? (I don\u0027t know yet what the right thing to do is.)\n\nI would certainly welcome any contribution either of you wants to make related to this into infrautils!  ;-) I\u0027m not crystal clear yet what exactly that would be... And remember infrautils cannot (does not want to) depend on yangtools, so... you just want to copy/paste that SpecialExecutors into org.opendaylight.infrautils.utils.concurrent? I don\u0027t want to block that - but why? yangtools is not going to depend on infrautils in the near future (Robert), so that\u0027s just duplicating code - why not let genius just use the SpecialExecutors from yangtools then?\n\nWhat may be useful could be some small abstraction to make it possible to use this easily in genius and netvirt... preferably without this XML (we much prefer the BP annotations, at least in genius and netvirt).  I think you\u0027ll actually want an interface and impl @Singleton @OsgiService class SpecialExecutorsProvider { ExecutorService newBlockingBoundedCachedThreadPool(String name) } ? With some way of globally, and/or per name, configure max-pool-size \u0026 max-queue-size?  And maybe some automatically JMX exposed monitoring of this (if it doesn\u0027t already automatically do that by itself) ?",
      "parentUuid": "ba1f61a0_6d4e983c",
      "range": {
        "startLine": 18,
        "startChar": 29,
        "endLine": 18,
        "endChar": 88
      },
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_bc11dd05",
        "filename": "sfc-sb-rest/src/main/resources/org/opendaylight/blueprint/sfc-sb-rest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-09-26T20:22:58Z",
      "side": 1,
      "message": "You certainly can advertise an ExecutorService as an OSGi service via \u003cservice\u003e. You\u0027d want to use a specific service property to distinguish it.\n\nnewBlockingBoundedCachedThreadPool is a ThreadPoolExecutor under the hood with some specific configuration and behavior. It\u0027s basically similar to Executors.newCachedThreadPool except it adds a bounded queue. \n\nI don\u0027t know if it\u0027s really necessary to have a global executor across projects. What if one project has higher load and starves another projects\u0027s tasks.  I don\u0027t think we need to worry about reusing an executor across sfc, genius, netvirt etc as long as projects don\u0027t use fixed thread pools that don\u0027t cleanup when idle. That\u0027s mainly why I made this change as each listener created it\u0027s own fixed thread pool which is wasteful as once all the threads are created they remain in memory for the life of the process even if they\u0027re never used again.",
      "parentUuid": "ba1f61a0_dc08112a",
      "range": {
        "startLine": 18,
        "startChar": 29,
        "endLine": 18,
        "endChar": 88
      },
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_8eb651f7",
        "filename": "sfc-sb-rest/src/main/resources/org/opendaylight/blueprint/sfc-sb-rest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-09-28T16:56:40Z",
      "side": 1,
      "message": "OK, I see. The only question I have then is whether there should be a multi threaded Executor per bundle, like here - or if each async DTCL listener class should have its own  single threaded Executor - which is what genius is doing today.\n\nAfter having had a closer look here I only now understand that SFC already had multi threaded Executors, just before each listener had its own, and in this change you\u0027re centralizing it, at granularity bundle (not project or even global).\n\nBased on this, I no longer see why a global ExecutorService advertised as an OSGi service would be useful, or to who - if it\u0027s bundle local anyway.",
      "parentUuid": "ba1f61a0_bc11dd05",
      "range": {
        "startLine": 18,
        "startChar": 29,
        "endLine": 18,
        "endChar": 88
      },
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_ae34f549",
        "filename": "sfc-sb-rest/src/main/resources/org/opendaylight/blueprint/sfc-sb-rest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-09-28T17:18:02Z",
      "side": 1,
      "message": "My intention here was to just centralize an executor for these set of listeners  as an improvement over an executor per listener. If there\u0027s no objections to the shared executor here then I\u0027d like to get this moved forward. Whether it should be a single thread executor or possibly use a global executor - I don\u0027t have a clear answer at this point but that could be investigated with future patches if needed.",
      "parentUuid": "ba1f61a0_8eb651f7",
      "range": {
        "startLine": 18,
        "startChar": 29,
        "endLine": 18,
        "endChar": 88
      },
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_d148e82e",
        "filename": "sfc-sb-rest/src/main/resources/org/opendaylight/blueprint/sfc-sb-rest.xml",
        "patchSetId": 1
      },
      "lineNbr": 18,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-09-28T22:02:16Z",
      "side": 1,
      "message": "OK. I don\u0027t want to further hold up review any further..",
      "parentUuid": "ba1f61a0_ae34f549",
      "range": {
        "startLine": 18,
        "startChar": 29,
        "endLine": 18,
        "endChar": 88
      },
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_114f2035",
        "filename": "sfc-sb-rest/src/main/resources/org/opendaylight/blueprint/sfc-sb-rest.xml",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 5867
      },
      "writtenOn": "2017-09-28T22:02:16Z",
      "side": 1,
      "message": "Just one more last other point here: I\u0027ve just looked (for the first time) more through your various SpecialExecutors, and was wondering why you would use the newBlockingBoundedCachedThreadPool variant here.. \n\nBut in the theoretical case of the queue ever becoming full in production, if I understand things correctly, this would then block on the CDS DataBroker internal change listener notification delivery thread, and thus probably block delivery of unrelated changes for the entire system.  Is this really what one would want in such a (probably hypothetical, but still...) case?  Seeing that you also have bounded non blocking variants which would reject with exceptions, would that not be better?  Things wouldn\u0027t work anyway, but there would be clear failures visible in the LOG... better, IMHO? \n\nAlso, and orthogonal, I see that you have *Fast* and *Cached* variants.  For such DTCL listeners, the *Fast* sound more appropriate to me (don\u0027t care about a bit more memory; we\u0027d want these to be as fast as possible?), so how about using your newBoundedFastThreadPool() instead of newBlockingBoundedCachedThreadPool?",
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba1f61a0_712e5cfc",
        "filename": "sfc-sb-rest/src/main/resources/org/opendaylight/blueprint/sfc-sb-rest.xml",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1842
      },
      "writtenOn": "2017-09-28T23:33:25Z",
      "side": 1,
      "message": "In CDS each listener gets its own actor and thus dedicated queue so if the listener blocks in the callback then it\u0027s blocking its own queue and does not affect other listeners. I think a last ditch calling thread executor in this case is better then rejecting b/c there\u0027s no recovery from the latter.  The other option is to use an unbounded queue and risk exhausiting memory as it did before but that makes me wary.\n\nThe \"Fast\" part really would only apply to the initial notifications that first spawn threads. With a \"fast\" configuration, when the thread count is less than the max, the thread pool prefers creating a new thread rather than possibly reusing an existing idle thread that was previously created in the pool. So if you have a \"fast\" pool with 5 threads, each of the first 5 tasks submitted will always spawn a new thread regardless if there\u0027s an idle thread. However after the 5 threads have been created, subsequent task are queued in the same manner as a \"cached\" thread pool. Therefore a \"fast\" pool wouldn\u0027t buy much here.",
      "parentUuid": "ba1f61a0_114f2035",
      "revId": "d5cf49d3ec8a6b2f3fab9795061f2bcf121868bb",
      "serverId": "7fc14799-209e-464c-9743-7a06c2c21a81",
      "unresolved": false
    }
  ]
}