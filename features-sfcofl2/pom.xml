<?xml version="1.0" encoding="UTF-8"?>
<!--
 TODO: Put your copyright here.

 This program and the accompanying materials are made available under the
 terms of the Eclipse Public License v1.0 which accompanies this distribution,
 and is available at http://www.eclipse.org/legal/epl-v10.html
--><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <parent>
    <artifactId>sfc-parent</artifactId>
    <groupId>org.opendaylight.sfc</groupId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>
   <!--
    Necessary TODO: Hookup your parent pom here, else you will not get necessary versions,
    maven repos etc.  If you run this archetype in a subdirectory of your project, it
    will pick the pom.xml from the parent directory as the parent pom, which may or may
    not be correct.
  -->
   <artifactId>features-sfcofl2</artifactId>
   <groupId>org.opendaylight.sfc</groupId>
   <!-- Optional TODO: Uncomment version if you are not using a parent pom.xml
   <version>1.0-SNAPSHOT</version>
   -->
   <packaging>jar</packaging>
   <properties>
      <features.file>features.xml</features.file>
      <!-- Optional TODO: Move these properties to your parent pom and possibly 
            DependencyManagement section of your parent pom -->
      <branding.version>1.0.0-SNAPSHOT</branding.version>
      <karaf.resources.version>1.4.2-SNAPSHOT</karaf.resources.version>
      <karaf.version>3.0.1</karaf.version>
      <feature.test.version>0.6.2-SNAPSHOT</feature.test.version>
      <karaf.empty.version>1.4.2-SNAPSHOT</karaf.empty.version>
      <surefire.version>2.16</surefire.version>
   </properties>
   <dependencies>
    <!--
      Necessary TODO: Put dependencies on any feature repos
      you use in your features.xml file.

      Note: they will need to be <type>xml</xml>
      and <classifier>features</classifier>.
      One other thing to watch for is to make sure they are
      <scope>compile</compile>, which they should be by default,
      but be cautious lest they be at a different scope in a parent pom.

      Examples:
        <dependency>
          <groupId>org.opendaylight.yangtools</groupId>
          <artifactId>features-yangtools</artifactId>
          <version>0.6.2-SNAPSHOT</version>
          <classifier>features</classifier>
          <type>xml</type>
        </dependency>
        <dependency>
          <groupId>org.opendaylight.controller</groupId>
          <artifactId>features-mdsal</artifactId>
          <version>1.1-SNAPSHOT</version>
          <classifier>features</classifier>
          <type>xml</type>
        </dependency>
        <dependency>
          <groupId>org.opendaylight.openflowplugin</groupId>
          <artifactId>features-openflowplugin</artifactId>
          <version>0.0.3-SNAPSHOT</version>
          <classifier>features</classifier>
          <type>xml</type>
        </dependency>
    -->
    <dependency>
      <groupId>org.opendaylight.yangtools</groupId>
      <artifactId>features-yangtools</artifactId>
      <version>0.6.2-SNAPSHOT</version>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>
    <dependency>
      <groupId>org.opendaylight.controller</groupId>
      <artifactId>features-mdsal</artifactId>
      <version>1.1-SNAPSHOT</version>
      <classifier>features</classifier>
      <type>xml</type>
    </dependency>
    <!--
      Necessary TODO: Put dependencies for bundles directly referenced
      in your features.xml file.  For every <bundle> reference in your
      features.xml file, you need a corresponding dependency here.

      Examples:
      <dependency>
        <groupId>org.opendaylight.sfc</groupId>
        <artifactId>sfc-provider</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>org.opendaylight.sfc</groupId>
        <artifactId>sfc-model</artifactId>
        <version>${project.version}</version>
      </dependency>
    -->

    <!--
      Necessary TODO: Put dependencies for configfiles directly referenced
      in your features.xml file.  For every <configfile> reference in your
      features.xml file, you need a corresponding dependency here.

      Example (presuming here version is coming from the parent pom):
      <dependency>
        <groupId>org.opendaylight.sfc</groupId>
        <artifactId>sfc-config</artifactId>
        <version>${project.version}</version>
        <type>xml</type>
        <classifier>config</classifier>
      </dependency>
    -->
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>sfc-model</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.2</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>config-api</artifactId>
            <version>${config.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>sal-binding-api</artifactId>
            <version>${mdsal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>sal-common-api</artifactId>
            <version>${mdsal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>sal-binding-config</artifactId>
            <version>${mdsal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>sal-binding-util</artifactId>
            <version>${mdsal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>sal-broker-impl</artifactId>
            <version>${mdsal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>sal-common</artifactId>
            <version>${mdsal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>sal-common-util</artifactId>
            <version>${mdsal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.sfc</groupId>
            <artifactId>sfc-provider</artifactId>
            <version>0.0.1-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller.model</groupId>
            <artifactId>model-flow-base</artifactId>
            <version>${mdsal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller.model</groupId>
            <artifactId>model-flow-service</artifactId>
            <version>${mdsal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller.model</groupId>
            <artifactId>model-inventory</artifactId>
            <version>${mdsal.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>yang-jmx-generator</artifactId>
            <version>${config.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>yang-jmx-generator</artifactId>
            <version>${config.version}</version>
            <type>test-jar</type>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.controller</groupId>
            <artifactId>yang-jmx-generator-plugin</artifactId>
            <version>${config.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
            <version>${osgi.core.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools</groupId>
            <artifactId>yang-binding</artifactId>
            <version>${yangtools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools</groupId>
            <artifactId>binding-generator-impl</artifactId>
            <version>${yangtools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools</groupId>
            <artifactId>concepts</artifactId>
            <version>${yangtools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools</groupId>
            <artifactId>binding-generator-util</artifactId>
            <version>${yangtools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools</groupId>
            <artifactId>binding-type-provider</artifactId>
            <version>${yangtools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools</groupId>
            <artifactId>yang-common</artifactId>
            <version>${yangtools.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools.model</groupId>
            <artifactId>ietf-inet-types</artifactId>
            <version>${ietf.model.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools.model</groupId>
            <artifactId>ietf-yang-types-20130715</artifactId>
            <version>${ietf.yang.types.version}</version>
        </dependency>
        <dependency>
            <groupId>org.opendaylight.yangtools.model</groupId>
            <artifactId>ietf-yang-types</artifactId>
            <version>${ietf.model.version}</version>
        </dependency>
        <dependency>
            <groupId>org.sonatype.plugins</groupId>
            <artifactId>munge-maven-plugin</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-client</artifactId>
            <version>1.17</version>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
            <version>1.18.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.2.4</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-json-org</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-base</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-jaxb-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.json</artifactId>
            <version>1.0.4</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <type>jar</type>
            <scope>compile</scope>
        </dependency>

   </dependencies>
   
   
   <build>
      <resources>
         <resource>
            <directory>src/main/resources</directory>
            <filtering>true</filtering>
         </resource>
      </resources>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <executions>
               <execution>
                  <id>filter</id>
                  <phase>generate-resources</phase>
                  <goals>
                     <goal>resources</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <executions>
               <execution>
                  <id>attach-artifacts</id>
                  <phase>package</phase>
                  <goals>
                     <goal>attach-artifact</goal>
                  </goals>
                  <configuration>
                     <artifacts>
                        <artifact>
                           <file>${project.build.directory}/classes/${features.file}</file>
                           <type>xml</type>
                           <classifier>features</classifier>
                        </artifact>
                     </artifacts>
                  </configuration>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${surefire.version}</version>
            <configuration>
              <systemPropertyVariables>
                <karaf.distro.groupId>org.opendaylight.controller</karaf.distro.groupId>
                <karaf.distro.artifactId>opendaylight-karaf-empty</karaf.distro.artifactId>
                <karaf.distro.version>${karaf.empty.version}</karaf.distro.version>
              </systemPropertyVariables>
              <dependenciesToScan>
               <dependency>org.opendaylight.yangtools:features-test</dependency>
              </dependenciesToScan>
            </configuration>
          </plugin>
      </plugins>
   </build>
   <scm>
      <connection>scm:git:ssh://git.opendaylight.org:29418/sfc.git</connection>
      <developerConnection>scm:git:ssh://git.opendaylight.org:29418/sfc.git</developerConnection>
      <tag>HEAD</tag>
      <url>https://git.opendaylight.org/gerrit/gitweb?p=sfc.git;a=summary</url>
   </scm>
</project>

