module service-function-acl {
  yang-version 1;

  namespace "urn:cisco:params:xml:ns:yang:sfc-acl";

  prefix sfc-acl;

  import ietf-acl {
    prefix "ietf-acl";
  }

  organization "Cisco Systems, Inc.";
  contact "Reinaldo Penno <repenno@cisco.com>";

  revision 2014-07-01 {
    description "creating Service Function Chaining extensions to ietf-acl model";
  }


  augment "/ietf-acl:access-lists/ietf-acl:access-list/ietf-acl:access-list-entries/ietf-acl:actions" {
    description "SFC simple filter actions";
    choice sfc-action {
    case acl-rendered-service-path {
      description "Determine the Service Function Path the packet the packet will
      traverse";
      leaf rendered-service-path {
        type string;
      }
     }
    }
  }

  augment "/ietf-acl:access-lists/ietf-acl:access-list/ietf-acl:access-list-entries/ietf-acl:matches" {
    description "Level 7 match criteria, all leafs will have a corresponding enum based on IPFIX/Netflow identifiers";
    leaf application-id {
      description "Application specific identifier (Facebook, Skype, ...)";
      type uint32;
    }
    leaf service-type {
      description "Type of service : video / audio / P2P / ... ";
      type uint32;
    }
    leaf protocol-path {
      description "Matcher on protocol presence in protocol path (HTTP, ...)";
      type uint32;
    }
  }

  augment "/ietf-acl:access-lists/ietf-acl:access-list/ietf-acl:access-list-entries/ietf-acl:matches" {
    description "Subscriber based match criterium";
    leaf subscriber-class {
      description "Matcher checking the result of a lookup table based on an IP address. The table is provisionned independently";
      type uint32;
    }
  }

}
