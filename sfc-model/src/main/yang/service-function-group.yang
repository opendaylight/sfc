module service-function-group {

  namespace "urn:cisco:params:xml:ns:yang:sfc-sfg";

  prefix sfc-sfg;

  import ietf-inet-types { prefix inet; }
  import ietf-yang-types { prefix yang; }
  import service-function {prefix sfc-sf; }
  import service-function-group-algorithm {prefix sfc-sfg-alg; }

  organization "Contextream, Inc.";
  contact "Kfir Yeshayahu <kfir.yeshayahu@contextream.com>";

  description
    "This module contains a collection of YANG definitions for
     managing service function group algorithms.

     Copyright (c) 2013 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

     // RFC Ed.: replace XXXX with actual RFC number and remove this
     // note.

     // RFC Ed.: update the date below with the date of RFC publication
     // and remove this note.

  revision 2015-14-02 {
    description
    "Revised based on SFF Load Balance Feature Proposal";
  }

  grouping service-function-group-grouping {
    list service-function-group {
      description
        "A list that holds all service function groups in the domain";
      key "name";
      leaf name {
        type string;
        description
          "The name of the service function group";
      }
      leaf algorithm {
        type string;
        description
          "The name of the service-function-group-algorithm used by this group";
      }
//      leaf type {
//        type string;
//        mandatory true;
//        description
//          "Service function group Type from service-function-group-type.yang";
//     }
      list sfg-service-function {
        key "name";
        leaf name {
          type string;
          description
            "The name of the Service Function";
        }
        description
          "A list of all service functions that are contained in this group";
      }
    }
    description
      "This group bundles together all service function groups in the domain";
  }

  // Service Function Groups

  container service-function-groups {
    uses service-function-group-grouping;
    description
      "All service function groups";
  }

// Remote procedure calls
}