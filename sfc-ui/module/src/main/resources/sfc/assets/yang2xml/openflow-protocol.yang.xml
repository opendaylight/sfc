<?xml version="1.0" encoding="UTF-8"?>
<module name="openflow-protocol"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:ofproto="urn:opendaylight:openflow:protocol"
        xmlns:yang="urn:ietf:params:xml:ns:yang:ietf-yang-types"
        xmlns:oft="urn:opendaylight:openflow:common:types"
        xmlns:oxm="urn:opendaylight:openflow:oxm"
        xmlns:ofinstruction="urn:opendaylight:openflow:common:instruction"
        xmlns:ofaction="urn:opendaylight:openflow:common:action">
  <namespace uri="urn:opendaylight:openflow:protocol"/>
  <prefix value="ofproto"/>
  <import module="ietf-yang-types">
    <prefix value="yang"/>
  </import>
  <import module="openflow-types">
    <prefix value="oft"/>
  </import>
  <import module="openflow-extensible-match">
    <prefix value="oxm"/>
  </import>
  <import module="openflow-instruction">
    <prefix value="ofinstruction"/>
  </import>
  <import module="openflow-action">
    <prefix value="ofaction"/>
  </import>
  <revision date="2013-07-31">
    <description>
      <text>OpenFlow 1.3 - protocol objects model</text>
    </description>
  </revision>
  <grouping name="port-grouping">
    <reference>
      <text>ofp_port</text>
    </reference>
    <leaf name="port-no">
      <type name="uint32"/>
    </leaf>
    <leaf name="hw-addr">
      <type name="yang:mac-address"/>
    </leaf>
    <leaf name="name">
      <type name="string"/>
    </leaf>
    <leaf name="config">
      <description>
        <text>Bitmap of OFPPC_* flags.</text>
      </description>
      <type name="oft:port-config"/>
    </leaf>
    <leaf name="state">
      <description>
        <text>Bitmap of OFPPS_* flags.</text>
      </description>
      <type name="oft:port-state"/>
    </leaf>
    <leaf name="current-features">
      <description>
        <text>Current features.</text>
      </description>
      <type name="oft:port-features"/>
    </leaf>
    <leaf name="advertised-features">
      <description>
        <text>Features being advertised by the port.</text>
      </description>
      <type name="oft:port-features"/>
    </leaf>
    <leaf name="supported-features">
      <description>
        <text>Features supported by the port.</text>
      </description>
      <type name="oft:port-features"/>
    </leaf>
    <leaf name="peer-features">
      <description>
        <text>Features advertised by peer.</text>
      </description>
      <type name="oft:port-features"/>
    </leaf>
    <leaf name="curr-speed">
      <description>
        <text>Current port bitrate in kbps.</text>
      </description>
      <type name="uint32"/>
      <units name="kbps"/>
    </leaf>
    <leaf name="max-speed">
      <description>
        <text>Max port bitrate in kbps</text>
      </description>
      <type name="uint32"/>
      <units name="kbps"/>
    </leaf>
    <leaf name="config-v10">
      <type name="oft:port-config-v10"/>
    </leaf>
    <leaf name="state-v10">
      <type name="oft:port-state-v10"/>
    </leaf>
    <leaf name="current-features-v10">
      <description>
        <text>Current features.</text>
      </description>
      <type name="oft:port-features-v10"/>
    </leaf>
    <leaf name="advertised-features-v10">
      <description>
        <text>Features being advertised by the port.</text>
      </description>
      <type name="oft:port-features-v10"/>
    </leaf>
    <leaf name="supported-features-v10">
      <description>
        <text>Features supported by the port.</text>
      </description>
      <type name="oft:port-features-v10"/>
    </leaf>
    <leaf name="peer-features-v10">
      <description>
        <text>Features advertised by peer.</text>
      </description>
      <type name="oft:port-features-v10"/>
    </leaf>
  </grouping>
  <grouping name="buckets-grouping">
    <list name="buckets-list">
      <uses name="bucket-grouping"/>
    </list>
  </grouping>
  <grouping name="bucket-grouping">
    <description>
      <text>Bucket for use in groups.</text>
    </description>
    <leaf name="weight">
      <description>
        <text>Relative weight of bucket. Only
defined for select groups.</text>
      </description>
      <type name="uint16"/>
    </leaf>
    <leaf name="watch-port">
      <description>
        <text>Port whose state affects whether this
bucket is live. Only required for fast
failover groups.</text>
      </description>
      <type name="oft:port-number"/>
    </leaf>
    <leaf name="watch-group">
      <description>
        <text>Group whose state affects whether this
bucket is live. Only required for fast
failover groups.</text>
      </description>
      <type name="uint32"/>
    </leaf>
    <uses name="ofaction:actions-grouping"/>
  </grouping>
  <container name="table-features-properties-container">
    <uses name="table-features-properties-grouping"/>
  </container>
  <grouping name="table-features-properties-grouping">
    <list name="table-feature-properties">
      <config value="false"/>
      <leaf name="type">
        <type name="oft:table-features-prop-type"/>
      </leaf>
    </list>
  </grouping>
  <grouping name="ofHeader">
    <reference>
      <text>ofp_header struct in Openflow Switch 1.3 Spec</text>
    </reference>
    <leaf name="version">
      <type name="uint8"/>
      <description>
        <text>OpenFlow version</text>
      </description>
    </leaf>
    <leaf name="xid">
      <type name="uint32"/>
      <description>
        <text>Transaction ID</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="ofHelloElementHeader">
    <reference>
      <text>ofpt_hello_elem_header struct in Openflow Switch 1.3 Spec</text>
    </reference>
    <leaf name="type">
      <type name="oft:hello-element-type"/>
    </leaf>
  </grouping>
  <grouping name="hello">
    <reference>
      <text>OFPT_HELLO message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <list name="elements">
      <uses name="ofHelloElementHeader"/>
      <leaf-list name="version-bitmap">
        <type name="boolean"/>
      </leaf-list>
    </list>
  </grouping>
  <grouping name="error">
    <reference>
      <text>OFPT_ERROR message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="type">
      <type name="uint16"/>
    </leaf>
    <leaf name="code">
      <type name="uint16"/>
    </leaf>
    <leaf name="type-string">
      <type name="string"/>
    </leaf>
    <leaf name="code-string">
      <type name="string"/>
    </leaf>
    <leaf name="data">
      <type name="binary"/>
    </leaf>
  </grouping>
  <grouping name="echo-request">
    <reference>
      <text>OFPT_ECHO_REQUEST message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="data">
      <type name="binary"/>
    </leaf>
  </grouping>
  <grouping name="echo-reply">
    <reference>
      <text>OFPT_ECHO_REPLY message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="data">
      <type name="binary"/>
    </leaf>
  </grouping>
  <grouping name="experimenter">
    <reference>
      <text>OFPT_EXPERIMENTER message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="experimenter">
      <type name="oft:experimenter-id"/>
    </leaf>
    <leaf name="exp_type">
      <type name="uint32"/>
    </leaf>
  </grouping>
  <grouping name="features-request">
    <reference>
      <text>OFPT_FEATURES_REQUEST message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
  </grouping>
  <grouping name="features-reply">
    <reference>
      <text>OFPT_FEATURES_REPLY message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="datapathId">
      <type name="uint64"/>
    </leaf>
    <leaf name="buffers">
      <type name="uint32"/>
    </leaf>
    <leaf name="tables">
      <type name="uint8"/>
    </leaf>
    <leaf name="auxiliaryId">
      <type name="uint8"/>
    </leaf>
    <leaf name="capabilities">
      <type name="oft:capabilities"/>
    </leaf>
    <leaf name="reserved">
      <type name="uint32"/>
    </leaf>
    <leaf name="capabilities-v10">
      <type name="oft:capabilities-v10"/>
    </leaf>
    <leaf name="actions-v10">
      <type name="oft:action-type-v10"/>
    </leaf>
    <list name="phy-port">
      <uses name="port-grouping"/>
    </list>
  </grouping>
  <grouping name="get-config-request">
    <reference>
      <text>OFPT_GET_CONFIG_REQUEST message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
  </grouping>
  <grouping name="get-config-reply">
    <reference>
      <text>OFPT_GET_CONFIG_REPLY message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="flags">
      <type name="oft:switch-config-flag"/>
    </leaf>
    <leaf name="miss-send-len">
      <type name="uint16"/>
    </leaf>
  </grouping>
  <grouping name="set-config">
    <reference>
      <text>OFPT_SET_CONFIG message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="flags">
      <type name="oft:switch-config-flag"/>
    </leaf>
    <leaf name="miss-send-len">
      <type name="uint16"/>
    </leaf>
  </grouping>
  <grouping name="packet-in">
    <reference>
      <text>OFPT_PACKET_IN message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="buffer-id">
      <type name="uint32"/>
    </leaf>
    <leaf name="total-len">
      <type name="uint16"/>
    </leaf>
    <leaf name="reason">
      <type name="oft:packet-in-reason"/>
    </leaf>
    <leaf name="table-id">
      <type name="oft:table-id"/>
    </leaf>
    <leaf name="cookie">
      <type name="uint64"/>
    </leaf>
    <uses name="oxm:match-grouping"/>
    <leaf name="data">
      <type name="binary"/>
    </leaf>
    <leaf name="in-port">
      <type name="uint16"/>
    </leaf>
  </grouping>
  <grouping name="flow-removed">
    <reference>
      <text>OFPT_FLOW_REMOVED message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="cookie">
      <type name="uint64"/>
    </leaf>
    <leaf name="priority">
      <type name="uint16"/>
    </leaf>
    <leaf name="reason">
      <type name="oft:flow-removed-reason"/>
    </leaf>
    <leaf name="table-id">
      <type name="oft:table-id"/>
    </leaf>
    <leaf name="duration-sec">
      <type name="uint32"/>
    </leaf>
    <leaf name="duration-nsec">
      <type name="uint32"/>
    </leaf>
    <leaf name="idle-timeout">
      <type name="uint16"/>
    </leaf>
    <leaf name="hard-timeout">
      <type name="uint16"/>
    </leaf>
    <leaf name="packet-count">
      <type name="uint64"/>
    </leaf>
    <leaf name="byte-count">
      <type name="uint64"/>
    </leaf>
    <uses name="oxm:match-grouping"/>
    <uses name="oxm:match-v10-grouping"/>
  </grouping>
  <grouping name="port-status">
    <reference>
      <text>OFPT_PORT_STATUS message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <uses name="port-grouping"/>
    <leaf name="reason">
      <type name="oft:port-reason"/>
    </leaf>
  </grouping>
  <grouping name="packet-out">
    <reference>
      <text>OFPT_PACKET_OUT message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <uses name="ofaction:actions-grouping"/>
    <leaf name="data">
      <type name="binary"/>
    </leaf>
    <leaf name="buffer-id">
      <type name="uint32"/>
    </leaf>
    <leaf name="in-port">
      <type name="oft:port-number"/>
    </leaf>
  </grouping>
  <grouping name="flow-mod">
    <reference>
      <text>OFPT_FLOW_MOD message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="cookie">
      <type name="uint64"/>
    </leaf>
    <leaf name="cookie-mask">
      <type name="uint64"/>
    </leaf>
    <leaf name="table-id">
      <type name="oft:table-id"/>
    </leaf>
    <leaf name="command">
      <type name="oft:flow-mod-command"/>
    </leaf>
    <leaf name="idle-timeout">
      <type name="uint16"/>
    </leaf>
    <leaf name="hard-timeout">
      <type name="uint16"/>
    </leaf>
    <leaf name="priority">
      <type name="uint16"/>
    </leaf>
    <leaf name="buffer-id">
      <type name="uint32"/>
    </leaf>
    <leaf name="out-port">
      <type name="oft:port-number"/>
    </leaf>
    <leaf name="out-group">
      <type name="uint32"/>
    </leaf>
    <leaf name="flags">
      <type name="oft:flow-mod-flags"/>
    </leaf>
    <uses name="oxm:match-grouping"/>
    <uses name="ofinstruction:instructions-grouping"/>
    <leaf name="flags-v10">
      <type name="oft:flow-mod-flags-v10"/>
    </leaf>
    <uses name="oxm:match-v10-grouping"/>
    <uses name="ofaction:actions-grouping"/>
  </grouping>
  <grouping name="group-mod">
    <reference>
      <text>OFPT_GROUP_MOD message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="command">
      <type name="oft:group-mod-command"/>
    </leaf>
    <leaf name="type">
      <type name="oft:group-type"/>
    </leaf>
    <leaf name="group-id">
      <type name="oft:group-id"/>
    </leaf>
    <uses name="buckets-grouping"/>
  </grouping>
  <grouping name="port-mod">
    <reference>
      <text>OFPT_PORT_MOD message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="port-no">
      <type name="oft:port-number"/>
    </leaf>
    <leaf name="hw-address">
      <type name="yang:mac-address"/>
    </leaf>
    <leaf name="config">
      <type name="oft:port-config"/>
    </leaf>
    <leaf name="mask">
      <type name="oft:port-config"/>
    </leaf>
    <leaf name="advertise">
      <type name="oft:port-features"/>
    </leaf>
    <leaf name="config-v10">
      <type name="oft:port-config-v10"/>
    </leaf>
    <leaf name="mask-v10">
      <type name="oft:port-config-v10"/>
    </leaf>
    <leaf name="advertise-v10">
      <type name="oft:port-features-v10"/>
    </leaf>
  </grouping>
  <grouping name="table-mod">
    <reference>
      <text>OFPT_TABLE_MOD message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="table-id">
      <type name="oft:table-id"/>
    </leaf>
    <leaf name="config">
      <type name="oft:table-config"/>
    </leaf>
  </grouping>
  <grouping name="multipart-request">
    <reference>
      <text>OFPT_MULTIPART_REQUEST message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="type">
      <type name="oft:multipart-type"/>
    </leaf>
    <leaf name="flags">
      <type name="oft:multipart-request-flags"/>
    </leaf>
    <choice name="multipart-request-body">
      <case name="multipart-request-desc-case">
        <container name="multipart-request-desc">
          <leaf name="empty">
            <type name="empty"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-request-flow-case">
        <container name="multipart-request-flow">
          <leaf name="table-id">
            <type name="uint8"/>
          </leaf>
          <leaf name="out-port">
            <type name="uint32"/>
          </leaf>
          <leaf name="out-group">
            <type name="uint32"/>
          </leaf>
          <leaf name="cookie">
            <type name="uint64"/>
          </leaf>
          <leaf name="cookie-mask">
            <type name="uint64"/>
          </leaf>
          <uses name="oxm:match-grouping"/>
          <uses name="oxm:match-v10-grouping"/>
        </container>
      </case>
      <case name="multipart-request-aggregate-case">
        <container name="multipart-request-aggregate">
          <leaf name="table-id">
            <type name="uint8"/>
          </leaf>
          <leaf name="out-port">
            <type name="uint32"/>
          </leaf>
          <leaf name="out-group">
            <type name="uint32"/>
          </leaf>
          <leaf name="cookie">
            <type name="uint64"/>
          </leaf>
          <leaf name="cookie-mask">
            <type name="uint64"/>
          </leaf>
          <uses name="oxm:match-grouping"/>
          <uses name="oxm:match-v10-grouping"/>
        </container>
      </case>
      <case name="multipart-request-table-case">
        <container name="multipart-request-table">
          <leaf name="empty">
            <type name="empty"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-request-port-stats-case">
        <container name="multipart-request-port-stats">
          <leaf name="port-no">
            <type name="uint32"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-request-queue-case">
        <container name="multipart-request-queue">
          <leaf name="port-no">
            <type name="uint32"/>
          </leaf>
          <leaf name="queue-id">
            <type name="uint32"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-request-group-case">
        <container name="multipart-request-group">
          <leaf name="group-id">
            <type name="oft:group-id"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-request-group-desc-case">
        <container name="multipart-request-group-desc">
          <leaf name="empty">
            <type name="empty"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-request-group-features-case">
        <container name="multipart-request-group-features">
          <leaf name="empty">
            <type name="empty"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-request-meter-case">
        <container name="multipart-request-meter">
          <leaf name="meter-id">
            <type name="oft:meter-id"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-request-meter-config-case">
        <container name="multipart-request-meter-config">
          <leaf name="meter-id">
            <type name="oft:meter-id"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-request-meter-features-case">
        <container name="multipart-request-meter-features">
          <leaf name="empty">
            <type name="empty"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-request-table-features-case">
        <container name="multipart-request-table-features">
          <list name="table-features">
            <leaf name="table-id">
              <type name="uint8"/>
            </leaf>
            <leaf name="name">
              <type name="string"/>
            </leaf>
            <leaf name="metadata-match">
              <type name="uint64"/>
            </leaf>
            <leaf name="metadata-write">
              <type name="uint64"/>
            </leaf>
            <leaf name="config">
              <type name="oft:table-config"/>
            </leaf>
            <leaf name="max-entries">
              <type name="uint32"/>
            </leaf>
            <uses name="table-features-properties-grouping"/>
          </list>
        </container>
      </case>
      <case name="multipart-request-port-desc-case">
        <container name="multipart-request-port-desc">
          <leaf name="empty">
            <type name="empty"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-request-experimenter-case">
        <container name="multipart-request-experimenter"/>
      </case>
    </choice>
  </grouping>
  <grouping name="multipart-reply">
    <reference>
      <text>OFPT_MULTIPART_REPLY message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="type">
      <type name="oft:multipart-type"/>
    </leaf>
    <leaf name="flags">
      <type name="oft:multipart-request-flags"/>
    </leaf>
    <choice name="multipart-reply-body">
      <case name="multipart-reply-desc-case">
        <container name="multipart-reply-desc">
          <leaf name="mfr_desc">
            <type name="string"/>
          </leaf>
          <leaf name="hw_desc">
            <type name="string"/>
          </leaf>
          <leaf name="sw_desc">
            <type name="string"/>
          </leaf>
          <leaf name="serial_num">
            <type name="string"/>
          </leaf>
          <leaf name="dp_desc">
            <type name="string"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-reply-flow-case">
        <container name="multipart-reply-flow">
          <list name="flow-stats">
            <leaf name="table-id">
              <type name="uint8"/>
            </leaf>
            <leaf name="duration-sec">
              <type name="uint32"/>
            </leaf>
            <leaf name="duration-nsec">
              <type name="uint32"/>
            </leaf>
            <leaf name="priority">
              <type name="uint16"/>
            </leaf>
            <leaf name="idle-timeout">
              <type name="uint16"/>
            </leaf>
            <leaf name="hard-timeout">
              <type name="uint16"/>
            </leaf>
            <leaf name="flags">
              <type name="oft:flow-mod-flags"/>
            </leaf>
            <leaf name="cookie">
              <type name="uint64"/>
            </leaf>
            <leaf name="packet-count">
              <type name="uint64"/>
            </leaf>
            <leaf name="byte-count">
              <type name="uint64"/>
            </leaf>
            <uses name="oxm:match-grouping"/>
            <uses name="ofinstruction:instructions-grouping"/>
            <uses name="oxm:match-v10-grouping"/>
            <uses name="ofaction:actions-grouping"/>
          </list>
        </container>
      </case>
      <case name="multipart-reply-aggregate-case">
        <container name="multipart-reply-aggregate">
          <leaf name="packet-count">
            <type name="uint64"/>
          </leaf>
          <leaf name="byte-count">
            <type name="uint64"/>
          </leaf>
          <leaf name="flow-count">
            <type name="uint32"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-reply-table-case">
        <container name="multipart-reply-table">
          <list name="table-stats">
            <leaf name="table-id">
              <type name="uint8"/>
            </leaf>
            <leaf name="active-count">
              <type name="uint32"/>
            </leaf>
            <leaf name="lookup-count">
              <type name="uint64"/>
            </leaf>
            <leaf name="matched-count">
              <type name="uint64"/>
            </leaf>
            <leaf name="name">
              <type name="string"/>
            </leaf>
            <leaf name="wildcards">
              <type name="oft:flow-wildcards-v10"/>
            </leaf>
            <leaf name="nw-src-mask">
              <type name="uint8"/>
            </leaf>
            <leaf name="nw-dst-mask">
              <type name="uint8"/>
            </leaf>
            <leaf name="max-entries">
              <type name="uint32"/>
            </leaf>
          </list>
        </container>
      </case>
      <case name="multipart-reply-port-stats-case">
        <container name="multipart-reply-port-stats">
          <list name="port-stats">
            <leaf name="port-no">
              <type name="uint32"/>
            </leaf>
            <leaf name="rx-packets">
              <type name="uint64"/>
            </leaf>
            <leaf name="tx-packets">
              <type name="uint64"/>
            </leaf>
            <leaf name="rx-bytes">
              <type name="uint64"/>
            </leaf>
            <leaf name="tx-bytes">
              <type name="uint64"/>
            </leaf>
            <leaf name="rx-dropped">
              <type name="uint64"/>
            </leaf>
            <leaf name="tx-dropped">
              <type name="uint64"/>
            </leaf>
            <leaf name="rx-errors">
              <type name="uint64"/>
            </leaf>
            <leaf name="tx-errors">
              <type name="uint64"/>
            </leaf>
            <leaf name="rx-frame-err">
              <type name="uint64"/>
            </leaf>
            <leaf name="rx-over-err">
              <type name="uint64"/>
            </leaf>
            <leaf name="rx-crc-err">
              <type name="uint64"/>
            </leaf>
            <leaf name="collisions">
              <type name="uint64"/>
            </leaf>
            <leaf name="duration-sec">
              <type name="uint32"/>
            </leaf>
            <leaf name="duration-nsec">
              <type name="uint32"/>
            </leaf>
          </list>
        </container>
      </case>
      <case name="multipart-reply-queue-case">
        <container name="multipart-reply-queue">
          <list name="queue-stats">
            <leaf name="port-no">
              <type name="uint32"/>
            </leaf>
            <leaf name="queue-id">
              <type name="uint32"/>
            </leaf>
            <leaf name="tx-bytes">
              <type name="uint64"/>
            </leaf>
            <leaf name="tx-packets">
              <type name="uint64"/>
            </leaf>
            <leaf name="tx-errors">
              <type name="uint64"/>
            </leaf>
            <leaf name="duration-sec">
              <type name="uint32"/>
            </leaf>
            <leaf name="duration-nsec">
              <type name="uint32"/>
            </leaf>
          </list>
        </container>
      </case>
      <case name="multipart-reply-group-case">
        <container name="multipart-reply-group">
          <list name="group-stats">
            <leaf name="group-id">
              <type name="oft:group-id"/>
            </leaf>
            <leaf name="ref-count">
              <type name="uint32"/>
            </leaf>
            <leaf name="packet-count">
              <type name="uint64"/>
            </leaf>
            <leaf name="byte-count">
              <type name="uint64"/>
            </leaf>
            <leaf name="duration-sec">
              <type name="uint32"/>
            </leaf>
            <leaf name="duration-nsec">
              <type name="uint32"/>
            </leaf>
            <list name="bucket-stats">
              <leaf name="packet-count">
                <type name="uint64"/>
              </leaf>
              <leaf name="byte-count">
                <type name="uint64"/>
              </leaf>
            </list>
          </list>
        </container>
      </case>
      <case name="multipart-reply-group-desc-case">
        <container name="multipart-reply-group-desc">
          <list name="group-desc">
            <leaf name="type">
              <type name="oft:group-type"/>
            </leaf>
            <leaf name="group-id">
              <type name="oft:group-id"/>
            </leaf>
            <uses name="buckets-grouping"/>
          </list>
        </container>
      </case>
      <case name="multipart-reply-group-features-case">
        <container name="multipart-reply-group-features">
          <leaf name="types">
            <type name="oft:group-types"/>
          </leaf>
          <leaf name="capabilities">
            <type name="oft:group-capabilities"/>
          </leaf>
          <leaf-list name="max_groups">
            <type name="uint32"/>
          </leaf-list>
          <leaf-list name="actions-bitmap">
            <type name="oft:action-type"/>
          </leaf-list>
        </container>
      </case>
      <case name="multipart-reply-meter-case">
        <container name="multipart-reply-meter">
          <list name="meter-stats">
            <leaf name="meter-id">
              <type name="oft:meter-id"/>
            </leaf>
            <leaf name="flow-count">
              <type name="uint32"/>
            </leaf>
            <leaf name="packet-in-count">
              <type name="uint64"/>
            </leaf>
            <leaf name="byte-in-count">
              <type name="uint64"/>
            </leaf>
            <leaf name="duration-sec">
              <type name="uint32"/>
            </leaf>
            <leaf name="duration-nsec">
              <type name="uint32"/>
            </leaf>
            <list name="meter-band-stats">
              <leaf name="packet-band-count">
                <type name="uint64"/>
              </leaf>
              <leaf name="byte-band-count">
                <type name="uint64"/>
              </leaf>
            </list>
          </list>
        </container>
      </case>
      <case name="multipart-reply-meter-config-case">
        <container name="multipart-reply-meter-config">
          <list name="meter-config">
            <leaf name="flags">
              <type name="oft:meter-flags"/>
            </leaf>
            <leaf name="meter-id">
              <type name="oft:meter-id"/>
            </leaf>
            <list name="bands">
              <uses name="meter-band-header"/>
            </list>
          </list>
        </container>
      </case>
      <case name="multipart-reply-meter-features-case">
        <container name="multipart-reply-meter-features">
          <leaf name="max-meter">
            <type name="uint32"/>
          </leaf>
          <leaf name="band-types">
            <type name="oft:meter-band-type-bitmap"/>
          </leaf>
          <leaf name="capabilities">
            <type name="oft:meter-flags"/>
          </leaf>
          <leaf name="max-bands">
            <type name="uint8"/>
          </leaf>
          <leaf name="max-color">
            <type name="uint8"/>
          </leaf>
        </container>
      </case>
      <case name="multipart-reply-table-features-case">
        <container name="multipart-reply-table-features">
          <list name="table-features">
            <leaf name="table-id">
              <type name="uint8"/>
            </leaf>
            <leaf name="name">
              <type name="string"/>
            </leaf>
            <leaf name="metadata-match">
              <type name="binary"/>
            </leaf>
            <leaf name="metadata-write">
              <type name="binary"/>
            </leaf>
            <leaf name="config">
              <type name="oft:table-config"/>
            </leaf>
            <leaf name="max-entries">
              <type name="uint32"/>
            </leaf>
            <uses name="table-features-properties-grouping"/>
          </list>
        </container>
      </case>
      <case name="multipart-reply-port-desc-case">
        <container name="multipart-reply-port-desc">
          <list name="ports">
            <uses name="port-grouping"/>
          </list>
        </container>
      </case>
      <case name="multipart-reply-experimenter-case">
        <container name="multipart-reply-experimenter"/>
      </case>
    </choice>
  </grouping>
  <grouping name="barrier-request">
    <reference>
      <text>OFPT_BARRIER_REQUEST message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
  </grouping>
  <grouping name="barrier-reply">
    <reference>
      <text>OFPT_BARRIER_REPLY message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
  </grouping>
  <grouping name="queue-get-config-request">
    <reference>
      <text>OFPT_QUEUE_GET_CONFIG_REQUEST message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="port">
      <type name="oft:port-number"/>
    </leaf>
  </grouping>
  <grouping name="queue-get-config-reply">
    <reference>
      <text>OFPT_QUEUE_GET_CONFIG_REPLY message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="port">
      <type name="oft:port-number"/>
    </leaf>
    <list name="queues">
      <uses name="packet-queue"/>
    </list>
  </grouping>
  <grouping name="packet-queue">
    <leaf name="queue-id">
      <type name="oft:queue-id"/>
    </leaf>
    <leaf name="port">
      <type name="oft:port-number"/>
    </leaf>
    <uses name="queue-property-header"/>
  </grouping>
  <container name="queue-prop-container">
    <uses name="queue-property-header"/>
  </container>
  <grouping name="queue-property-header">
    <list name="queue-property">
      <config value="false"/>
      <leaf name="property">
        <type name="oft:queue-properties"/>
      </leaf>
    </list>
  </grouping>
  <grouping name="role-request">
    <reference>
      <text>OFPT_ROLE_REQUEST message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="role">
      <type name="oft:controller-role"/>
    </leaf>
    <leaf name="generation-id">
      <type name="uint64"/>
    </leaf>
  </grouping>
  <grouping name="role-reply">
    <reference>
      <text>OFPT_ROLE_REPLY message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="role">
      <type name="oft:controller-role"/>
    </leaf>
    <leaf name="generation-id">
      <type name="uint64"/>
    </leaf>
  </grouping>
  <grouping name="get-async-request">
    <reference>
      <text>OFPT_GET_ASYNC_REQUEST message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
  </grouping>
  <grouping name="get-async-reply">
    <reference>
      <text>OFPT_GET_ASYNC_REPLY message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <uses name="async-body-grouping"/>
  </grouping>
  <grouping name="set-async">
    <reference>
      <text>OFPT_SET_ASYNC message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <uses name="async-body-grouping"/>
  </grouping>
  <grouping name="async-body-grouping">
    <list name="packet-in-mask">
      <leaf-list name="mask">
        <type name="oft:packet-in-reason"/>
      </leaf-list>
    </list>
    <list name="port-status-mask">
      <leaf-list name="mask">
        <type name="oft:port-reason"/>
      </leaf-list>
    </list>
    <list name="flow-removed-mask">
      <leaf-list name="mask">
        <type name="oft:flow-removed-reason"/>
      </leaf-list>
    </list>
  </grouping>
  <grouping name="meter-mod">
    <reference>
      <text>OFPT_METER_MOD message in Openflow Switch 1.3 Spec</text>
    </reference>
    <uses name="ofHeader"/>
    <leaf name="command">
      <type name="oft:meter-mod-command"/>
    </leaf>
    <leaf name="flags">
      <type name="oft:meter-flags"/>
    </leaf>
    <leaf name="meter-id">
      <type name="oft:meter-id"/>
    </leaf>
    <list name="bands">
      <uses name="meter-band-header"/>
    </list>
  </grouping>
  <container name="meter-band-container">
    <uses name="meter-band-header"/>
  </container>
  <grouping name="meter-band-header">
    <choice name="meter-band">
      <case name="meter-band-drop-case">
        <container name="meter-band-drop">
          <uses name="meter-band-commons"/>
        </container>
      </case>
      <case name="meter-band-dscp-remark-case">
        <container name="meter-band-dscp-remark">
          <uses name="meter-band-commons"/>
          <leaf name="prec-level">
            <type name="uint8"/>
          </leaf>
        </container>
      </case>
      <case name="meter-band-experimenter-case">
        <container name="meter-band-experimenter">
          <uses name="meter-band-commons"/>
        </container>
      </case>
    </choice>
  </grouping>
  <grouping name="meter-band-commons">
    <leaf name="type">
      <type name="oft:meter-band-type"/>
    </leaf>
    <leaf name="rate">
      <type name="uint32"/>
    </leaf>
    <leaf name="burst-size">
      <type name="uint32"/>
    </leaf>
  </grouping>
  <notification name="hello-message">
    <uses name="hello"/>
    <reference>
      <text>OFPT_HELLO message in Openflow Switch 1.3 Spec</text>
    </reference>
  </notification>
  <notification name="error-message">
    <uses name="error"/>
    <reference>
      <text>OFPT_ERROR message in Openflow Switch 1.3 Spec</text>
    </reference>
  </notification>
  <notification name="echo-request-message">
    <uses name="echo-request"/>
    <reference>
      <text>OFPT_ECHO_REQUEST message in Openflow Switch 1.3 Spec</text>
    </reference>
  </notification>
  <notification name="experimenter-message">
    <uses name="experimenter"/>
    <reference>
      <text>OFPT_EXPERIMENTER message in Openflow Switch 1.3 Spec</text>
    </reference>
  </notification>
  <rpc name="echo">
    <input>
      <uses name="echo-request"/>
    </input>
    <output>
      <uses name="echo-reply"/>
    </output>
  </rpc>
  <rpc name="echo-reply">
    <input>
      <uses name="echo-reply"/>
    </input>
  </rpc>
  <rpc name="hello">
    <input>
      <uses name="hello"/>
    </input>
  </rpc>
  <rpc name="experimenter">
    <input>
      <uses name="experimenter"/>
    </input>
  </rpc>
  <rpc name="get-features">
    <input>
      <uses name="features-request"/>
    </input>
    <output>
      <uses name="features-reply"/>
    </output>
  </rpc>
  <rpc name="get-config">
    <input>
      <uses name="get-config-request"/>
    </input>
    <output>
      <uses name="get-config-reply"/>
    </output>
  </rpc>
  <rpc name="set-config">
    <input>
      <uses name="set-config"/>
    </input>
  </rpc>
  <notification name="packet-in-message">
    <uses name="packet-in"/>
  </notification>
  <notification name="flow-removed-message">
    <uses name="flow-removed"/>
  </notification>
  <notification name="port-status-message">
    <uses name="port-status"/>
  </notification>
  <rpc name="packet-out">
    <input>
      <uses name="packet-out"/>
    </input>
  </rpc>
  <rpc name="flow-mod">
    <input>
      <uses name="flow-mod"/>
    </input>
  </rpc>
  <rpc name="group-mod">
    <input>
      <uses name="group-mod"/>
    </input>
  </rpc>
  <rpc name="port-mod">
    <input>
      <uses name="port-mod"/>
    </input>
  </rpc>
  <rpc name="table-mod">
    <input>
      <uses name="table-mod"/>
    </input>
  </rpc>
  <rpc name="multipart-request">
    <input>
      <uses name="multipart-request"/>
    </input>
  </rpc>
  <notification name="multipart-reply-message">
    <uses name="multipart-reply"/>
  </notification>
  <rpc name="barrier">
    <input>
      <uses name="barrier-request"/>
    </input>
    <output>
      <uses name="barrier-reply"/>
    </output>
  </rpc>
  <rpc name="get-queue-config">
    <input>
      <uses name="queue-get-config-request"/>
    </input>
    <output>
      <uses name="queue-get-config-reply"/>
    </output>
  </rpc>
  <rpc name="role-request">
    <input>
      <uses name="role-request"/>
    </input>
    <output>
      <uses name="role-reply"/>
    </output>
  </rpc>
  <rpc name="get-async">
    <input>
      <uses name="get-async-request"/>
    </input>
    <output>
      <uses name="get-async-reply"/>
    </output>
  </rpc>
  <rpc name="set-async">
    <input>
      <uses name="set-async"/>
    </input>
  </rpc>
  <rpc name="meter-mod">
    <input>
      <uses name="meter-mod"/>
    </input>
  </rpc>
</module>
