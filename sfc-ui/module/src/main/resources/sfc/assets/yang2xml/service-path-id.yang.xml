<?xml version="1.0" encoding="UTF-8"?>
<module name="service-path-id"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:sfc-spid="urn:cisco:params:xml:ns:yang:service-path-id">
  <namespace uri="urn:cisco:params:xml:ns:yang:service-path-id"/>
  <prefix value="sfc-spid"/>
  <organization>
    <text>Cisco Systems, Inc.</text>
  </organization>
  <contact>
    <text>Reinaldo Penno &lt;repenno@cisco.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions to
manage Service Path Ids.

It allows user to reserve bands of path-ids, associated
path-ids to tenants and the implementation of several
algorithms for symmetric path id generation.

Copyright (c) 2013 IETF Trust and the persons identified as
authors of the code.  All rights reserved.

Redistribution and use in source and binary forms, with or
without modification, is permitted pursuant to, and subject
to the license terms contained in, the Simplified BSD License
set forth in Section 4.c of the IETF Trust's Legal Provisions
Relating to IETF Documents
(http://trustee.ietf.org/license-info).

This version of this YANG module is part of RFC XXXX; see
the RFC itself for full legal notices.</text>
  </description>
  <revision date="2015-08-04">
    <description>
      <text>Initial Revisions</text>
    </description>
    <reference>
      <text>https://tools.ietf.org/html/draft-penno-sfc-yang</text>
    </reference>
  </revision>
  <typedef name="path-id-ref">
    <type name="leafref">
      <path value="/sfc-spid:service-path-ids/sfc-spid:service-path-id/sfc-spid:path-id"/>
    </type>
    <description>
      <text>This type is used by data models that need to reference
a specific service path id.</text>
    </description>
  </typedef>
  <typedef name="path-id-state">
    <type name="enumeration">
      <enum name="available">
        <value value="1"/>
        <description>
          <text>Path-id is available</text>
        </description>
      </enum>
      <enum name="allocated">
        <value value="2"/>
        <description>
          <text>Path-id has been allocated for use</text>
        </description>
      </enum>
      <enum name="reserved">
        <value value="3"/>
        <description>
          <text>Path-d has been reserved</text>
        </description>
      </enum>
    </type>
    <description>
      <text>Determines the state of the path-id</text>
    </description>
  </typedef>
  <typedef name="generation-algorithm-enum">
    <type name="enumeration">
      <enum name="random">
        <value value="1"/>
        <description>
          <text>Random Path-id generation</text>
        </description>
      </enum>
      <enum name="sequential">
        <value value="2"/>
        <description>
          <text>Sequential Path-id generation</text>
        </description>
      </enum>
    </type>
    <description>
      <text>The path-id generation algorithm</text>
    </description>
  </typedef>
  <container name="service-path-ids">
    <config value="false"/>
    <description>
      <text>A container that holds the list of all Rendered Service Paths
in a SFC domain</text>
    </description>
    <leaf name="current-path-id">
      <type name="uint32">
        <range value="0..16777216"/>
      </type>
    </leaf>
    <leaf name="generation-algorithm">
      <type name="generation-algorithm-enum"/>
      <description>
        <text>The algorithm used to generate path-ids</text>
      </description>
    </leaf>
    <list name="service-path-id">
      <key value="path-id-key"/>
      <description>
        <text>A list that holds bitarray entries covering all service path ids</text>
      </description>
      <leaf name="path-id-key">
        <type name="int64"/>
        <description>
          <text>The key to a specific path-id bit array. The same key covers 64 path-ids</text>
        </description>
      </leaf>
      <leaf name="path-id-bitarray">
        <type name="int64"/>
        <description>
          <text>Holds a bitarray where each bit represents a path-id</text>
        </description>
      </leaf>
    </list>
  </container>
  <rpc name="delete-path-id">
    <description>
      <text>Delete a Path Id</text>
    </description>
    <input>
      <leaf name="path-id">
        <type name="uint32">
          <range value="0..16777216"/>
        </type>
        <description>
          <text>Identifies a service path.
Participating nodes MUST use this identifier for path
selection.  An administrator can use the service path
value for reporting and troubleshooting packets along
a specific path.</text>
        </description>
      </leaf>
    </input>
    <output>
      <leaf name="result">
        <type name="boolean"/>
        <description>
          <text>True if Rendered Service Path Id was deleted, otherwise
false</text>
        </description>
      </leaf>
    </output>
  </rpc>
  <rpc name="allocate-path-id">
    <description>
      <text>Allocate a path-id</text>
    </description>
    <input>
      <leaf name="path-id">
        <type name="uint32">
          <range value="0..16777216"/>
        </type>
        <description>
          <text>Identifies a service path.
Participating nodes MUST use this identifier for path
selection.  An administrator can use the service path
value for reporting and troubleshooting packets along
a specific path.</text>
        </description>
      </leaf>
    </input>
    <output>
      <leaf name="result">
        <type name="boolean"/>
        <description>
          <text>True if Rendered Service Path Id was deleted, otherwise
false</text>
        </description>
      </leaf>
    </output>
  </rpc>
  <rpc name="reserve-path-id-range">
    <description>
      <text>Reserve a path-id range</text>
    </description>
    <input>
      <leaf name="path-id-start">
        <type name="uint32">
          <range value="0..16777216"/>
        </type>
        <description>
          <text>Start of the path-id range</text>
        </description>
      </leaf>
      <leaf name="path-id-end">
        <type name="uint32">
          <range value="0..16777216"/>
        </type>
        <description>
          <text>End of the path-id range</text>
        </description>
      </leaf>
    </input>
    <output>
      <leaf name="result">
        <type name="boolean"/>
        <description>
          <text>True if Rendered Service Path Id was deleted, otherwise
false</text>
        </description>
      </leaf>
    </output>
  </rpc>
  <rpc name="read-path-id">
    <description>
      <text>Read all the necessary information for the first hop of a
Rendered Service Path</text>
    </description>
    <input>
      <leaf name="path-id">
        <type name="uint32">
          <range value="0..16777216"/>
        </type>
        <description>
          <text>Identifies a service path.
Participating nodes MUST use this identifier for path
selection.  An administrator can use the service path
value for reporting and troubleshooting packets along
a specific path.</text>
        </description>
      </leaf>
    </input>
    <output>
      <leaf name="state">
        <type name="path-id-state"/>
        <description>
          <text>Defines whether the path-id is available, allocated
or reserved</text>
        </description>
      </leaf>
    </output>
  </rpc>
  <rpc name="set-generation-algorithm">
    <description>
      <text>Set the path-id generation algorithm to be used</text>
    </description>
    <input>
      <leaf name="generation-algorithm">
        <type name="generation-algorithm-enum"/>
      </leaf>
    </input>
    <output>
      <leaf name="result">
        <type name="boolean"/>
        <description>
          <text>True if the generation-algorithm was set successfully,
otherwise false</text>
        </description>
      </leaf>
    </output>
  </rpc>
</module>
