<?xml version="1.0" encoding="UTF-8"?>
<module name="service-function-type"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:sfc-sft="urn:cisco:params:xml:ns:yang:sfc-sft"
        xmlns:inet="urn:ietf:params:xml:ns:yang:ietf-inet-types"
        xmlns:yang="urn:ietf:params:xml:ns:yang:ietf-yang-types">
  <namespace uri="urn:cisco:params:xml:ns:yang:sfc-sft"/>
  <prefix value="sfc-sft"/>
  <import module="ietf-inet-types">
    <prefix value="inet"/>
  </import>
  <import module="ietf-yang-types">
    <prefix value="yang"/>
  </import>
  <organization>
    <text>Cisco Systems, Inc.</text>
  </organization>
  <contact>
    <text>Reinaldo Penno &lt;repenno@cisco.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for
managing service function types.

It follows closely the constructs of
http://tools.ietf.org/html/draft-ietf-netmod-interfaces-cfg-12

Copyright (c) 2013 IETF Trust and the persons identified as
authors of the code.  All rights reserved.

Redistribution and use in source and binary forms, with or
without modification, is permitted pursuant to, and subject
to the license terms contained in, the Simplified BSD License
set forth in Section 4.c of the IETF Trust's Legal Provisions
Relating to IETF Documents
(http://trustee.ietf.org/license-info).

This version of this YANG module is part of RFC XXXX; see
the RFC itself for full legal notices.</text>
  </description>
  <revision date="2014-07-01">
    <description>
      <text>Changes based on Opendaylight Testing.</text>
    </description>
  </revision>
  <identity name="service-function-type-identity">
    <description>
      <text>Base identity from which specific service function
types are derived.</text>
    </description>
  </identity>
  <identity name="firewall">
    <base name="service-function-type-identity"/>
    <description>
      <text>Firewall</text>
    </description>
  </identity>
  <identity name="dpi">
    <base name="service-function-type-identity"/>
    <description>
      <text>Deep Packet Inspection</text>
    </description>
  </identity>
  <identity name="napt44">
    <base name="service-function-type-identity"/>
    <description>
      <text>Network Address and Port Translation 44</text>
    </description>
  </identity>
  <identity name="qos">
    <base name="service-function-type-identity"/>
    <description>
      <text>Quality of Service</text>
    </description>
  </identity>
  <identity name="ids">
    <base name="service-function-type-identity"/>
    <description>
      <text>Intrusion Detection System</text>
    </description>
  </identity>
  <typedef name="service-function-type">
    <type name="identityref">
      <base name="service-function-type-identity"/>
    </type>
    <description>
      <text>This type is used to reference all
registered service function types</text>
    </description>
  </typedef>
  <container name="service-function-types">
    <description>
      <text>A list of Service function Types. For each type we keep
a list of Service Functions</text>
    </description>
    <list name="service-function-type">
      <key value="type"/>
      <leaf name="type">
        <type name="service-function-type"/>
        <description>
          <text>The service function type</text>
        </description>
      </leaf>
      <list name="sft-service-function-name">
        <key value="name"/>
        <leaf name="name">
          <type name="string"/>
          <description>
            <text>The name of the service function.</text>
          </description>
        </leaf>
        <description>
          <text>The list of all service functions of a specific type</text>
        </description>
      </list>
      <description>
        <text>A list of all service types. Each service-type entry holds
a list of all service functions of the type</text>
      </description>
    </list>
  </container>
</module>
